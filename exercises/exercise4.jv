pipeline MowestaPipeline {
    HttpExtractor -> ArchiveInterpreter -> FilePicker -> TextFileInterpreter -> CSVInterpreter -> ColumnDeleter -> RowDeleter -> TableInterpreter -> CelsiusToFahrenheitTransformer -> CelsiusToFahrenheitTransformer -> SQLiteLoader;

    block HttpExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block ArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block FilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block TextFileInterpreter oftype TextFileInterpreter {
        encoding: "utf8";
    }

    block CSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block ColumnDeleter oftype ColumnDeleter {
        delete: ["G", "H", "I", "L", "M", "N", "O"];
    }

    block RowDeleter oftype RowDeleter {
        delete: [1];
    }

    block TableInterpreter oftype TableInterpreter {
        header: false;
        columns: [
            "Geraet" oftype PosIntegerType,
            "Hersteller" oftype text,
            "Model" oftype text,
            "Monat" oftype integer,
            "Temperatur" oftype decimal,
            "Batterietemperatur" oftype decimal,
            "Geraet aktiv" oftype text
        ];
    }

    block CelsiusToFahrenheitTransformer oftype TableTransformer {
        inputColumns: ["Temperatur"];
        outputColumn: "Temperatur";
        use: CelsiusToFahrenheit;
    }

    block SQLiteLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
        createTable: true;
        columnTypes: [
            "Geraet BIGINT",
            "Hersteller TEXT",
            "Model TEXT",
            "Monat INTEGER",
            "Temperatur FLOAT",
            "Batterietemperatur FLOAT",
            "Geraet aktiv TEXT"
        ];
    }

    transform CelsiusToFahrenheit {
        from celsius oftype decimal;
        to fahrenheit oftype decimal;
        fahrenheit: (celsius * 9/5) + 32;
    }

    valuetype PosIntegerType oftype integer {
        constraints: [PostRange];
    }

    constraint PostRange oftype RangeConstraint {
        lowerBound: 1;
        lowerBoundInclusive: true;
    }
}
